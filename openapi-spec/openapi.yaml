openapi: 3.0.3
info:
  title: disposable-email-project
  description: 'Disposable Email Project API'
  version: 0.0.1
servers:
  - url: /v1
    description: ''
paths:
  /accounts:
    post:
      operationId: postAccountCollection
      responses:
        '201':
          description: Account resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          links:
            GetAccountItem:
              operationId: getAccountItem
              parameters:
                id: $response.body#/id
              description: The `id` value returned in the response can be used as the `id` parameter in `GET /accounts/{id}`.
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      summary: Creates a Account resource.
      description: Creates a Account resource.
    parameters: []
  /accounts/{id}:
    get:
      security:
        - bearerAuth: []
      operationId: getAccountItem
      responses:
        '200':
          description: Account resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      summary: Retrieves a Account resource.
      description: Retrieves a Account resource.
      parameters:
        - name: id
          in: path
          description: Resource identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    delete:
      security:
        - bearerAuth: []
      operationId: deleteAccountItem
      responses:
        '204':
          description: Account resource deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      summary: Removes the Account resource.
      description: Removes the Account resource.
      parameters:
        - name: id
          in: path
          description: Resource identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /domains:
    get:
      operationId: getDomainCollection
      responses:
        '200':
          description: Domain collection
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Domain'
      summary: Retrieves the collection of Domain resources.
      description: Retrieves the collection of Domain resources.
      parameters:
        - name: page
          in: query
          description: The collection page number
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /domains/{id}:
    get:
      operationId: getDomainItem
      responses:
        '200':
          description: Domain resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      summary: Retrieves a Domain resource.
      description: Retrieves a Domain resource.
      parameters:
        - name: id
          in: path
          description: Resource identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /me:
    get:
      security:
        - bearerAuth: []
      operationId: get_meAccountItem
      responses:
        '200':
          description: Account resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      summary: Retrieves a Account resource.
      description: Retrieves a Account resource.
      parameters: []
      deprecated: false
    parameters: []
  /messages:
    get:
      security:
        - bearerAuth: []
      operationId: getMessageCollection
      responses:
        '200':
          description: Message collection
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Messages'
      summary: Retrieves the collection of Message resources.
      description: Retrieves the collection of Message resources.
      parameters:
        - name: page
          in: query
          description: The collection page number
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /messages/{id}:
    get:
      security:
        - bearerAuth: []
      operationId: getMessageItem
      responses:
        '200':
          description: Message resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      summary: Retrieves a Message resource.
      description: Retrieves a Message resource.
      parameters:
        - name: id
          in: path
          description: Resource identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    delete:
      security:
        - bearerAuth: []
      operationId: deleteMessageItem
      responses:
        '204':
          description: Message resource deleted
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      summary: Removes the Message resource.
      description: Removes the Message resource.
      parameters:
        - name: id
          in: path
          description: Resource identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      security:
        - bearerAuth: []
      operationId: patchMessageItem
      responses:
        '200':
          description: Message resource updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          links:
            GetMessageItem:
              operationId: getMessageItem
              parameters:
                id: $response.body#/id
              description: The `id` value returned in the response can be used as the `id` parameter in `GET /messages/{id}`.
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      summary: Updates the Message resource.
      description: Updates the Message resource.
      parameters:
        - name: id
          in: path
          description: Resource identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: The updated Message resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
        required: true
      deprecated: false
    parameters: []
  /sources/{id}:
    get:
      security:
        - bearerAuth: []
      operationId: getSourceItem
      responses:
        '200':
          description: Source resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      summary: Retrieves a Source resource.
      description: Retrieves a Source resource.
      parameters:
        - name: id
          in: path
          description: Resource identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /token:
    post:
      operationId: postCredentialsItem
      responses:
        '200':
          description: Get JWT token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
      summary: Get JWT token to login.
      description: ''
      parameters: []
      requestBody:
        description: Generate new JWT Token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credentials'
        required: false
      deprecated: false
    parameters: []
components:
  schemas:
    Account:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          type: string
        address:
          format: email
          type: string
        quota:
          type: integer
        used:
          type: integer
        isDisabled:
          type: boolean
        isDeleted:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - address
    Domain:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          type: string
        domain:
          type: string
        isActive:
          type: boolean
        isPrivate:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Message:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          type: string
        accountId:
          readOnly: true
          type: string
          format: iri-reference
        msgid:
          readOnly: true
          type: string
        from:
          example:
            address: from@example.com
            name: John Doe
          readOnly: true
          $ref: '#/components/schemas/Address'
        to:
          type: array
          items:
            $ref: '#/components/schemas/Address'
          example:
            - address: receiver1@example.com
              name: John Doe
            - address: receiver2@example.com
              name: Doe John
          readOnly: true
        cc:
          type: array
          items:
            $ref: '#/components/schemas/Address'
          example:
            - address: cc1@example.com
              name: John Doe
            - address: cc2@example.com
              name: Doe John
          readOnly: true
        bcc:
          type: array
          items:
            $ref: '#/components/schemas/Address'
          example:
            - address: bcc1@example.com
              name: John Doe
            - address: bcc2@example.com
              name: Doe John
          readOnly: true
        subject:
          readOnly: true
          type: string
        seen:
          type: boolean
        flagged:
          readOnly: true
          type: boolean
        isDeleted:
          type: boolean
        verifications:
          readOnly: true
          type: array
          items:
            type: string
        retention:
          type: boolean
        retentionDate:
          type: string
          format: date-time
        text:
          readOnly: true
          type: string
        html:
          readOnly: true
          type: array
          items:
            type: string
        hasAttachments:
          readOnly: true
          type: boolean
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
          example:
            - id: ATTACH000001
              filename: happy.png
              contentType: image/png
              disposition: attachment
              transferEncoding: base64
              related: false
              size: 20
              downloadUrl: /messages/id/attachment/ATTACH000001
            - id: ATTACH000002
              filename: happy.png
              contentType: image/png
              disposition: attachment
              transferEncoding: base64
              related: false
              size: 240
              downloadUrl: /messages/id/attachment/ATTACH000002
        size:
          readOnly: true
          type: integer
        downloadUrl:
          readOnly: true
          type: string
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
    Messages:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          type: string
        accountId:
          readOnly: true
          type: string
          format: iri-reference
        msgid:
          readOnly: true
          type: string
        from:
          example:
            - address: from@example.com
              name: John Doe
          readOnly: true
          $ref: '#/components/schemas/Address'
        to:
          type: array
          items:
            $ref: '#/components/schemas/Address'
          example:
            - address: receiver1@example.com
              name: John Doe
            - address: receiver2@example.com
              name: Doe John
          readOnly: true
        subject:
          readOnly: true
          type: string
        intro:
          readOnly: true
          type: string
        seen:
          type: boolean
        isDeleted:
          type: boolean
        hasAttachments:
          readOnly: true
          type: boolean
        size:
          readOnly: true
          type: integer
        downloadUrl:
          readOnly: true
          type: string
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
    Source:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          type: string
        downloadUrl:
          type: string
        data:
          type: string
    Token:
      type: object
      properties:
        token:
          type: string
          readOnly: true
    Credentials:
      type: object
      properties:
        address:
          type: string
          example: test@example.com
        password:
          type: string
          example: password
    Address:
      type: object
      properties:
        address:
          type: string
          example: connor@example.com
        name:
          type: string
          example: Jon Connor
    Attachment:
      type: object
      properties:
        id:
          type: string
        filename:
          type: string
        contentType:
          type: string
        disposition:
          type: string
        transferEncoding:
          type: string
        related:
          type: boolean
        size:
          type: integer
        downloadUrl:
          type: string
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      description: ErrorResponse
  responses: {}
  parameters: {}
  examples: {}
  requestBodies: {}
  headers: {}
  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      name: Authorization
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT